tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
t aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
View(tbl_clean)
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
temp <- arrange(gender_count, descending = TRUE)
View(gender_count)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
temp <- arrange(gender_count$gender, descending = TRUE)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
temp <- sort(gender_count$gender, descending = TRUE)
temp
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
temp <- sort(gender_count$n, descending = TRUE)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
temp <- arrange(gender_count, n, descending = TRUE)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count$n,descending = TRUE)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count$n, descending = TRUE)
gender_count
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
View(gender_count)
gender_count <- filter(gender_count, gender_count$n != '(Missing)')
View(gender_count)
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
View(gender_count)
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = "[2]", "[1]" = "[1]", "[5]" = "[5]", .default = "[4]")
View(tbl_clean)
summary(tbl_clean)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(edu_count)
tbl_clean$edu7 <- recode(as.character(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
View(tbl_clean)
View(tbl_clean)
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "F" = "[2]", "M" = "[1]", "QNC" = "[5]", .default = "[4]")
View(tbl_clean)
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "F" = "[2]", "M" = "[1]", "QNC" = "[5]", .default = "[4]")
View(tbl_clean)
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
tidyverse functions
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
View(tbl_clean)
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
View(gender_count)
View(tbl_clean)
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 'F', "[1]" = 'M', "[5]" = 'QNC', .default = "[4]")
View(tbl_clean)
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 'F', "[1]" = 'M', "[5]" = 'QNC', .default = "Other")
View(tbl_clean)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(tbl_clean)
tbl_clean$edu7 <- recode(as.character(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
View(tbl_clean)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, recode(gender4, "[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
recode(edu7, '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
View(tbl_clean)
View(tbl_clean)
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 'F', "[1]" = 'M', "[5]" = 'QNC', .default = "Other")
View(tbl_clean)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(edu_count)
tbl_clean$edu7 <- recode(as.character(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
View(tbl_clean)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean$gender4 = recode(tbl_clean$gender,"[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
tbl_clean$edu7 = recode(as.character(tbl_clean$edu), '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
View(tbl)
View(tbl_clean)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean$gender4, recode(tbl_clean$gender,"[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
tbl_clean$edu7, recode(as.character(tbl_clean$edu), '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
tbl_clean <- tbl_clean %>%
mutate(gender4 = recode(gender,'[1]' = 'M', '[2]' = 'F', '[5]' = 'GQ', .default = 'Other'),
edu7 = recode(as.factor(edu), '1' = "no highschool", '2' = "no highschool", '3' = "some high school", '4' = "HS grad", '5' = "some college", '6' = "post secondary", '7' = "post secondary", '8' = "some grad", '9' = "masters", '10' = "advanced degree", '11' = "advanced degree", '12' = "advanced degree", '13' = "advanced degree", '14' = "masters")
)
View(tbl_clean)
tbl_clean$edu7 <- recode(as.character(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 'F', "[1]" = 'M', "[5]" = 'QNC', .default = "Other")
View(tbl_clean)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- tbl_clean %>%
mutate(gender4 = recode(gender,"[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
edu7 = recode(as.character(edu), '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
View(tbl_clean)
# white men
temp = filter(tbl_clean, gender = 'M')
# white men
temp <- filter(tbl_clean, gender = 'M')
View(tbl)
# white men
temp <- filter(tbl_clean, gender4 = 'M')
# white men
temp <- filter(tbl_clean, gender4 == 'M')
View(temp)
# white men
temp <- filter(tbl_clean, gender4 == 'M' && race == 6)
View(temp)
# white men
temp <- filter(tbl_clean, gender4 == 'M' && race == 6)
View(temp)
# white men
temp <- filter(tbl_clean, gender4 == 'M' & race == 6)
View(temp)
print(mean(temp$bias))
# white men
tbl_clean %>%
filter(gender4 == 'M' & race == 6) %>%
summarize(mean_bias_for_white_men = mean(bias))
print(mean(temp$bias))
# white men
temp <- filter(tbl_clean, gender4 == 'M' & race == 6)
print(mean(temp$bias))
# white women
temp <- filter(tbl_clean, gender4 == 'F' & race == 6)
print(mean(temp$bias))
# white women
tbl_clean %>%
filter(gender4 == 'F' & race == 6) %>%
summarize(mean_bias_for_white_women = mean(bias))
# advanced degree holders who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 14)
# advanced degree holders who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'advanced degree')
View(temp)
View(temp)
# advanced degree holders who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'advanced degree')
print(mean(temp$bias))
tbl_clean %>%
filter(gender4 == 'M' & edu7 == 'advanced degree') %>%
summarize(mean_bias_for_men_AD = mean(bias))
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'highschook graduate')
print(mean(temp$bias))
# high school graduates who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'highschool graduate')
print(mean(temp$bias))
tbl_clean %>%
filter(gender4 == 'M' & edu7 == 'HS grad') %>%
summarize(mean_bias_for_men_HS = mean(bias))
print(mean(temp$bias))
tbl_clean$edu7 <- recode(as.factor(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, gender4 = recode(gender, "[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
edu7 = recode(as.factor(edu), '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
View(temp)
View(tbl_clean)
View(tbl)
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 'F', "[1]" = 'M', "[5]" = 'QNC', .default = "Other")
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
tbl_clean$edu7 <- recode(as.factor(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
View(tbl_clean)
View(tbl_clean)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, gender4 = recode(gender, "[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
edu7 = recode(as.factor(edu), '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
View(tbl_clean)
# white men
temp <- filter(tbl_clean, gender4 == 'M' & race == 6)
print(mean(temp$bias))
# white women
temp <- filter(tbl_clean, gender4 == 'F' & race == 6)
print(mean(temp$bias))
# advanced degree holders who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'advanced degree')
print(mean(temp$bias))
# high school graduates who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'highschool graduate')
print(mean(temp$bias))
# loading libraries  ---------------------------------------------
library(tidyverse)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv("IAT.csv")
tbl_clean <- select(tbl, session_id, gender, raceomb_002, D_biep.White_Good_all, Mn_RT_all_3467,
edu_14, politicalid_7, STATE, att_7, tblacks_0to10, twhites_0to10, labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean, !is.na(D_biep.White_Good_all) | D_biep.White_Good_all == '')
tbl_clean <- rename(tbl_clean,subject = session_id,race = raceomb_002,bias = D_biep.White_Good_all,rt = Mn_RT_all_3467,
edu = edu_14,political = politicalid_7,state = STATE,race_att = att_7,temp_black = tblacks_0to10,
temp_white = twhites_0to10)
View(tbl_clean)
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- fct_explicit_na(tbl_clean$gender)
tbl_clean$state <- fct_explicit_na(tbl_clean$state)
summary(tbl_clean)
factorVar <- c('subject', 'gender','state')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
summary(tbl_clean)
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
View(gender_count)
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count, desc(n))
gender_count <- filter(gender_count, gender_count$gender != '(Missing)')
gender_count[1:3,1]
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
tbl_clean$gender4 <- recode(tbl_clean$gender, "[2]" = 'F', "[1]" = 'M', "[5]" = 'QNC', .default = "Other")
View(tbl_clean)
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
View(edu_count)
tbl_clean$edu7 <- recode(as.factor(tbl_clean$edu),'1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree')
View(tbl_clean)
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean <- mutate(tbl_clean, gender4 = recode(gender, "[2]" = "F", "[1]" = "M", "[5]" = "QNC", .default = "Other"),
edu7 = recode(as.factor(edu), '1' = 'no highschool','2' = 'no highschool', '3' = 'some highschool',
'4' = 'highschool graduate','5' = 'some college','6' = 'postsecondary degree',
'7' = 'postsecondary degree','8'= 'postsecondary degree','9'= 'masters (MA & MBA)',
'14'= 'masters (MA & MBA)','10' = 'advanced degree','11' = 'advanced degree', '12' = 'advanced degree',
'13'='advanced degree','14'= 'advanced degree'))
View(tbl_clean)
# white men
temp <- filter(tbl_clean, gender4 == 'M' & race == 6)
print(mean(temp$bias))
# white women
temp <- filter(tbl_clean, gender4 == 'F' & race == 6)
print(mean(temp$bias))
# advanced degree holders who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'advanced degree')
print(mean(temp$bias))
# high school graduates who are men
temp <- filter(tbl_clean, gender4 == 'M' & edu7 == 'highschool graduate')
print(mean(temp$bias))
